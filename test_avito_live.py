# test_avito_live.py
import asyncio
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
sys.path.insert(0, str(Path(__file__).parent))

from app.services.avito.auth import AvitoAuthManager
from app.services.avito.client import AvitoAPIClient

async def test_auth():
    """–¢–µ—Å—Ç OAuth –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    print("=" * 50)
    print("üîê –¢–µ—Å—Ç 1: OAuth 2.0 –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è")
    print("=" * 50)
    
    try:
        auth = AvitoAuthManager()
        
        # –ü–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å
        print("\n1Ô∏è‚É£ –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ç–æ–∫–µ–Ω (–ø–µ—Ä–≤—ã–π —Ä–∞–∑)...")
        token1 = await auth.get_access_token()
        print(f"‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: {token1[:30]}...")
        print(f"   –î–ª–∏–Ω–∞ —Ç–æ–∫–µ–Ω–∞: {len(token1)} —Å–∏–º–≤–æ–ª–æ–≤")
        
        # –í—Ç–æ—Ä–æ–π –∑–∞–ø—Ä–æ—Å (–∏–∑ –∫—ç—à–∞)
        print("\n2Ô∏è‚É£ –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ç–æ–∫–µ–Ω –ø–æ–≤—Ç–æ—Ä–Ω–æ (–∏–∑ –∫—ç—à–∞)...")
        token2 = await auth.get_access_token()
        print(f"‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: {token2[:30]}...")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
        if token1 == token2:
            print("\n‚úÖ –£–°–ü–ï–•! –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            return True
        else:
            print("\n‚ùå –û–®–ò–ë–ö–ê! –¢–æ–∫–µ–Ω—ã —Ä–∞–∑–Ω—ã–µ (–∫—ç—à –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç)")
            return False
            
    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc()
        return False

async def test_client():
    """–¢–µ—Å—Ç AvitoAPIClient"""
    print("\n" + "=" * 50)
    print("ü§ñ –¢–µ—Å—Ç 2: AvitoAPIClient")
    print("=" * 50)
    
    try:
        client = AvitoAPIClient()
        
        print("\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –∫–ª–∏–µ–Ω—Ç–∞...")
        print(f"‚úÖ –ö–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω: {client.__class__.__name__}")
        print(f"   Base URL: {client.base_url if hasattr(client, 'base_url') else 'N/A'}")
        
        # –ü–æ–∫–∞ –Ω–µ –¥–µ–ª–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –∫ API
        print("\n‚ö†Ô∏è  –†–µ–∞–ª—å–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –∫ Messenger/Items API –¥–µ–ª–∞–µ–º –ø–æ—Å–ª–µ T012")
        
        return True
        
    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc()
        return False

async def main():
    print("\n" + "üöÄ" * 25)
    print("–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï AVITO API CLIENT (T011)")
    print("üöÄ" * 25)
    
    # –¢–µ—Å—Ç 1: OAuth
    result1 = await test_auth()
    
    # –¢–µ—Å—Ç 2: Client
    result2 = await test_client()
    
    # –ò—Ç–æ–≥–∏
    print("\n" + "=" * 50)
    print("üìä –ò–¢–û–ì–ò:")
    print("=" * 50)
    print(f"  OAuth 2.0:        {'‚úÖ PASS' if result1 else '‚ùå FAIL'}")
    print(f"  AvitoAPIClient:   {'‚úÖ PASS' if result2 else '‚ùå FAIL'}")
    print("=" * 50)
    
    if result1 and result2:
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò! T011 –ì–û–¢–û–í!")
        return 0
    else:
        print("\n‚ö†Ô∏è  –ï–°–¢–¨ –û–®–ò–ë–ö–ò. –ù–£–ñ–ù–´ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø.")
        return 1

if __name__ == "__main__":
    exit_code = asyncio.run(main())
    sys.exit(exit_code)
